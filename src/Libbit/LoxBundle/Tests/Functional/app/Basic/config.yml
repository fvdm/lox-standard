imports:
    - { resource: ./../config/default.yml }

framework:
    secret: OAJ0e018ue90ipjsd

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Rednose\FrameworkBundle\Entity\User
    group:
        group_class: Rednose\FrameworkBundle\Entity\Group
        group_manager: fos_user.group_manager.default

fos_oauth_server:
    db_driver:  orm
    client_class:        Rednose\FrameworkBundle\Entity\Client
    access_token_class:  Rednose\FrameworkBundle\Entity\AccessToken
    refresh_token_class: Rednose\FrameworkBundle\Entity\RefreshToken
    auth_code_class:     Rednose\FrameworkBundle\Entity\AuthCode

    service:
        user_provider: rednose_framework.user_manager

vich_uploader:
    db_driver: orm # or mongodb

    mappings:
        file:
            delete_on_update: false # Don't delete on update, it breaks cloning
            upload_destination: %kernel.root_dir%/../data
            namer: vich_uploader.namer_uniqid

sonata_notification:
    backend: sonata.notification.backend.runtime

    queues:
        - { queue: catchall, default: true }

rednose_framework:
    oauth: true

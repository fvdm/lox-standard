imports:
    - { resource: parameters.yml }
    - { resource: security.yml }


framework:
    translator:      { fallback: 'nl' }
    secret:          %secret%
    router:          { resource: "%kernel.root_dir%/config/routing.yml" }
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    default_locale:  %locale%
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    session:         ~


# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        csrf_provider: "@form.csrf_provider"
        item_manager:  "@libbit_lox.item_manager"
        share_manager: "@libbit_lox.share_manager"

        # Localbox settings
        application_title: LocalBox
        application_logo: "bundles/libbitlox/logo/whitebox.png"

        app_backcolor: "0x1B1B1B"
        app_fontcolor: "0x999999"


# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

        # default_entity_manager: default
        # entity_managers:
        #     default:
        #         connection: default
        #         mappings:
        #             SonataNotificationBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    encryption: ssl
    auth_mode: login
    spool:     { type: memory }
    sender_address: localbox@libbit.eu

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Rednose\FrameworkBundle\Entity\User
    group:
        group_class: Rednose\FrameworkBundle\Entity\Group
        group_manager: fos_user.group_manager.default

sonata_admin:
    title: LocalBox Admin

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:

fos_rest:
    param_fetcher_listener: true
    service:
        router:       router
        templating:   templating
        serializer:   jms_serializer.serializer
        view_handler: fos_rest.view_handler.default

nelmio_api_doc:
    sandbox:
        enabled: false

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Rednose\FrameworkBundle\Entity\User
    group:
        group_class: Rednose\FrameworkBundle\Entity\Group
        group_manager: fos_user.group_manager.default

fos_oauth_server:
    db_driver:  orm
    client_class:        Rednose\FrameworkBundle\Entity\Client
    access_token_class:  Rednose\FrameworkBundle\Entity\AccessToken
    refresh_token_class: Rednose\FrameworkBundle\Entity\RefreshToken
    auth_code_class:     Rednose\FrameworkBundle\Entity\AuthCode

    service:
        user_provider: rednose_framework.user_manager

        options:
            access_token_lifetime: 3600
            refresh_token_lifetime: 1209600
            auth_code_lifetime: 30

knp_time: ~

vich_uploader:
    db_driver: orm # or mongodb

    mappings:
        file:
            delete_on_update: false # Don't delete on update, it breaks cloning
            upload_destination: %kernel.root_dir%/../data
            namer: vich_uploader.namer_uniqid
            directory_namer: directory_namer.dir_path
            inject_on_load: true

rednose_framework:
    oauth: true

rednose_yui:
#    assets:
#        yui3:       : '@RednoseUiBundle/Resources/yui/yui3'
#        yui3-gallery: '@RednoseUiBundle/Resources/yui/yui3-gallery'
#        rednose-ui  : '%kernel.root_dir%/../vendor/rednose/rednose-ui'
#        lox         : '@LibbitLoxBundle/Resources/yui'

    packages:
        - { name: yui3, dir: vendor/rednose/rednose-ui-bundle/Rednose/RednoseUiBundle/Resources/yui/yui3 }
        - { name: yui3-gallery, dir: vendor/rednose/rednose-ui-bundle/Rednose/RednoseUiBundle/Resources/yui/yui3-gallery }
        - { name: rednose-ui, dir: vendor/rednose/rednose-ui }
        - { name: lox, dir: src/Libbit/LoxBundle/Resources/yui }

    groups:
      - { name: rednose-ui }

rms_push_notifications:
    ios:
        sandbox: true
        pem: "%kernel.root_dir%/Resources/apns/apns_certificate_dev.pem"
        passphrase: j7n9AiTLvCnMHd
